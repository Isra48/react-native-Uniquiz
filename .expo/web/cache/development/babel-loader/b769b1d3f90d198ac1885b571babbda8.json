{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/nuevousuario/Desktop/app mobile/react-native-Uniquiz/screens/Results.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { human } from \"react-native-typography\";\nimport * as Animatable from \"react-native-animatable\";\nimport { AllHtmlEntities as Entities } from \"html-entities\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar Results = function Results(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    var _state$questions = state.questions,\n        amount = _state$questions.amount,\n        answers = _state$questions.answers,\n        questions = _state$questions.questions;\n    var questionsWithAnswers = questions.map(function (q, index) {\n      return _objectSpread(_objectSpread({}, q), {}, {\n        answer: answers[index],\n        isCorrect: answers[index] === q.correct_answer\n      });\n    });\n    var score = questionsWithAnswers.reduce(function (acc, _ref2) {\n      var isCorrect = _ref2.isCorrect;\n      return acc + (isCorrect ? 1 : 0);\n    }, 0);\n    return {\n      score: score,\n      amount: amount,\n      questionsWithAnswers: questionsWithAnswers\n    };\n  }),\n      score = _useSelector.score,\n      amount = _useSelector.amount,\n      questionsWithAnswers = _useSelector.questionsWithAnswers;\n\n  var dispatch = useDispatch();\n  var playAgain = useCallback(function () {\n    dispatch.settings.playClickSound();\n    dispatch.questions.reset();\n    navigation.navigate(\"Home\");\n  }, [navigation, dispatch]);\n  var resultText = score < 6 ? \"No luck!\" : \"Lucky!!\";\n  return React.createElement(LinearGradient, {\n    colors: [\"#4b6cb7\", \"#182848\"],\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.resultsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(Animatable.Text, {\n    animation: \"zoomIn\",\n    style: [human.title1, styles.score],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, score), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [human.title1, styles.resultText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, resultText), React.createElement(View, {\n    style: styles.detailsRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.dot, {\n      backgroundColor: \"#3dd598\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: [human.body, styles.detailsText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, score + \" correct answers\")), React.createElement(View, {\n    style: styles.detailsRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.dot, {\n      backgroundColor: \"#ff575f\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: [human.body, styles.detailsText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, amount - score + \" incorrect answers\")))), React.createElement(TouchableOpacity, {\n    onPress: playAgain,\n    style: styles.playAgainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [human.title3],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Play Again\"))), React.createElement(ScrollView, {\n    contentContainerStyle: styles.questionsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, questionsWithAnswers.map(function (_ref3) {\n    var isCorrect = _ref3.isCorrect,\n        question = _ref3.question,\n        answer = _ref3.answer;\n    return React.createElement(View, {\n      key: question,\n      style: [styles.questionContainer, isCorrect ? styles.greenContainer : styles.redContainer],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: [styles.questionBox, isCorrect ? styles.greenBox : styles.redBox],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [human.bodyWhite, styles.answer, isCorrect ? styles.correctAnswer : styles.incorrectAnswer],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, answer)), React.createElement(Text, {\n      style: [human.body, styles.questionText],\n      ellipsizeMode: \"tail\",\n      numberOfLines: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, Entities.decode(question)));\n  })), React.createElement(StatusBar, {\n    style: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Results;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  topContainer: {\n    width: 375,\n    height: 235,\n    backgroundColor: \"#ffc542\"\n  },\n  resultsContainer: {\n    height: 156,\n    borderRadius: 25,\n    backgroundColor: \"#ffffff\",\n    marginHorizontal: 28,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: 10,\n    padding: 24,\n    marginBottom: 5\n  },\n  score: {\n    fontSize: 100,\n    lineHeight: 100,\n    color: \"#182848\",\n    marginTop: 16\n  },\n  detailsRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  dot: {\n    width: 15,\n    height: 10,\n    borderRadius: 6,\n    marginRight: 8\n  },\n  resultText: {\n    marginBottom: 12,\n    color: \"#182848\"\n  },\n  detailsText: {\n    color: \"#899a96\"\n  },\n  questionContainer: {\n    height: 105,\n    borderRadius: 25,\n    marginHorizontal: 25,\n    marginBottom: 18,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 24\n  },\n  questionBox: {\n    width: 59,\n    height: 57,\n    borderRadius: 12,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  greenBox: {\n    backgroundColor: \"#3dd598\"\n  },\n  redBox: {\n    backgroundColor: \"#ff565e\"\n  },\n  greenContainer: {\n    backgroundColor: \"rgba(61, 213, 152, .6)\"\n  },\n  redContainer: {\n    backgroundColor: \"rgba(255, 87, 95, .6)\"\n  },\n  questionsContainer: {\n    marginTop: 24\n  },\n  questionText: {\n    color: \"white\",\n    flexShrink: 1,\n    marginLeft: 16,\n    flex: 1\n  },\n  answer: {},\n  correctAnswer: {},\n  incorrectAnswer: {\n    textDecorationLine: \"line-through\",\n    textDecorationStyle: \"solid\",\n    textDecorationColor: \"blue\"\n  },\n  playAgainContainer: {\n    alignSelf: \"center\",\n    paddingVertical: 16\n  }\n});","map":{"version":3,"sources":["/Users/nuevousuario/Desktop/app mobile/react-native-Uniquiz/screens/Results.tsx"],"names":["StatusBar","React","useCallback","useSelector","useDispatch","LinearGradient","human","Animatable","AllHtmlEntities","Entities","TouchableOpacity","Results","navigation","state","questions","amount","answers","questionsWithAnswers","map","q","index","answer","isCorrect","correct_answer","score","reduce","acc","dispatch","playAgain","settings","playClickSound","reset","navigate","resultText","styles","container","topContainer","resultsContainer","title1","detailsRow","dot","backgroundColor","body","detailsText","playAgainContainer","title3","questionsContainer","question","questionContainer","greenContainer","redContainer","questionBox","greenBox","redBox","bodyWhite","correctAnswer","incorrectAnswer","questionText","decode","StyleSheet","create","flex","width","height","borderRadius","marginHorizontal","flexDirection","justifyContent","alignItems","marginTop","padding","marginBottom","fontSize","lineHeight","color","marginRight","paddingHorizontal","flexShrink","marginLeft","textDecorationLine","textDecorationStyle","textDecorationColor","alignSelf","paddingVertical"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useCallback } from \"react\";\nimport { StyleSheet, Text, View, ScrollView } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, Dispatch } from \"../store\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ResultsProps } from \"../types/navigation\";\nimport { human } from \"react-native-typography\";\nimport * as Animatable from \"react-native-animatable\";\nimport { AllHtmlEntities as Entities } from \"html-entities\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Results: React.FunctionComponent<ResultsProps> = ({\n  navigation,\n}: ResultsProps) => {\n  const { score, amount, questionsWithAnswers } = useSelector<\n    RootState,\n    {\n      score: number;\n      amount: number;\n      questionsWithAnswers: Array<\n        BooleanQuestion & { isCorrect: boolean; answer: StringBoolean }\n      >;\n    }\n  >((state) => {\n    const { amount, answers, questions } = state.questions;\n    const questionsWithAnswers = questions.map((q, index) => ({\n      ...q,\n      answer: answers[index],\n      isCorrect: answers[index] === q.correct_answer,\n    }));\n    const score = questionsWithAnswers.reduce(\n      (acc, { isCorrect }) => acc + (isCorrect ? 1 : 0),\n      0\n    );\n    return { score, amount, questionsWithAnswers };\n  });\n  const dispatch = useDispatch<Dispatch>();\n  const playAgain = useCallback(() => {\n    dispatch.settings.playClickSound();\n    dispatch.questions.reset();\n    navigation.navigate(\"Home\");\n  }, [navigation, dispatch]);\n  const resultText = score < 6 ? \"No luck!\" : \"Lucky!!\";\n  return (\n    <LinearGradient colors={[\"#4b6cb7\", \"#182848\"]} style={styles.container}>\n      <View style={styles.topContainer}>\n        <View style={styles.resultsContainer}>\n          <Animatable.Text\n            animation=\"zoomIn\"\n            style={[human.title1, styles.score]}\n          >\n            {score}\n          </Animatable.Text>\n          <View>\n            <Text style={[human.title1, styles.resultText]}>{resultText}</Text>\n            <View style={styles.detailsRow}>\n              <View style={[styles.dot, { backgroundColor: \"#3dd598\" }]}></View>\n              <Text\n                style={[human.body, styles.detailsText]}\n              >{`${score} correct answers`}</Text>\n            </View>\n            <View style={styles.detailsRow}>\n              <View style={[styles.dot, { backgroundColor: \"#ff575f\" }]}></View>\n              <Text style={[human.body, styles.detailsText]}>{`${\n                amount - score\n              } incorrect answers`}</Text>\n            </View>\n          </View>\n        </View>\n\n        <TouchableOpacity onPress={playAgain} style={styles.playAgainContainer}>\n          <Text style={[human.title3]}>Play Again</Text>\n        </TouchableOpacity>\n      </View>\n      <ScrollView contentContainerStyle={styles.questionsContainer}>\n        {questionsWithAnswers.map(({ isCorrect, question, answer }) => (\n          <View\n            key={question}\n            style={[\n              styles.questionContainer,\n              isCorrect ? styles.greenContainer : styles.redContainer,\n            ]}\n          >\n            <View\n              style={[\n                styles.questionBox,\n                isCorrect ? styles.greenBox : styles.redBox,\n              ]}\n            >\n              <Text\n                style={[\n                  human.bodyWhite,\n                  styles.answer,\n                  isCorrect ? styles.correctAnswer : styles.incorrectAnswer,\n                ]}\n              >\n                {answer}\n              </Text>\n            </View>\n            <Text\n              style={[human.body, styles.questionText]}\n              ellipsizeMode=\"tail\"\n              numberOfLines={4}\n            >\n              {Entities.decode(question)}\n            </Text>\n          </View>\n        ))}\n      </ScrollView>\n      <StatusBar style=\"dark\" />\n    </LinearGradient>\n  );\n};\n\nexport default Results;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    // alignItems: 'center',\n    // justifyContent: 'center',\n  },\n  topContainer: {\n    width: 375,\n    height: 235,\n    backgroundColor: \"#ffc542\",\n  },\n  resultsContainer: {\n    height: 156,\n    borderRadius: 25,\n    backgroundColor: \"#ffffff\",\n    marginHorizontal: 28,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: 10,\n    padding: 24,\n    marginBottom: 5,\n  },\n  score: {\n    fontSize: 100,\n    lineHeight: 100,\n    color: \"#182848\",\n    marginTop: 16,\n  },\n  detailsRow: { flexDirection: \"row\", alignItems: \"center\" },\n  dot: {\n    width: 15,\n    height: 10,\n    borderRadius: 6,\n    marginRight: 8,\n  },\n  resultText: {\n    marginBottom: 12,\n    color: \"#182848\",\n  },\n  detailsText: { color: \"#899a96\" },\n  questionContainer: {\n    height: 105,\n    borderRadius: 25,\n    marginHorizontal: 25,\n    marginBottom: 18,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 24,\n  },\n  questionBox: {\n    width: 59,\n    height: 57,\n    borderRadius: 12,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  greenBox: { backgroundColor: \"#3dd598\" },\n  redBox: { backgroundColor: \"#ff565e\" },\n  greenContainer: { backgroundColor: \"rgba(61, 213, 152, .6)\" },\n  redContainer: { backgroundColor: \"rgba(255, 87, 95, .6)\" },\n  questionsContainer: { marginTop: 24 },\n  questionText: { color: \"white\", flexShrink: 1, marginLeft: 16, flex: 1 },\n  answer: {},\n  correctAnswer: {},\n  incorrectAnswer: {\n    textDecorationLine: \"line-through\",\n    textDecorationStyle: \"solid\",\n    textDecorationColor: \"blue\",\n  },\n  playAgainContainer: {\n    alignSelf: \"center\",\n    paddingVertical: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}