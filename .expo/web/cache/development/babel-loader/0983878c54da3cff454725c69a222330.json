{"ast":null,"code":"var _jsxFileName = \"/Users/nuevousuario/Desktop/app mobile/react-native-Uniquiz/screens/Home.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useCallback, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Category from \"../components/Category\";\nimport { human } from \"react-native-typography\";\nimport { useDispatch } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch.settings.playMusic();\n  }, []);\n  var onCategoryPress = useCallback(function _callee(categoryId, category) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(dispatch.questions.loadQuestions({\n              categoryId: categoryId\n            }));\n\n          case 2:\n            navigation.navigate(\"Quizz\", {\n              category: category\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [dispatch]);\n  return React.createElement(LinearGradient, {\n    colors: [\"#4b6cb7\", \"#182848\"],\n    style: s.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: s.scrollViewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [human.title1, s.subtitle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Select a Category\"), React.createElement(Category, {\n    name: \"animals\",\n    onPress: onCategoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: s.categoryRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Category, {\n    name: \"games\",\n    onPress: onCategoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(Category, {\n    name: \"music\",\n    onPress: onCategoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: s.categoryRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Category, {\n    name: \"vehicles\",\n    onPress: onCategoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(Category, {\n    name: \"random\",\n    onPress: onCategoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Home;\nvar s = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: 8\n  },\n  categoryRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 18\n  },\n  scrollViewContainer: {\n    paddingHorizontal: 8,\n    justifyContent: \"space-around\"\n  },\n  title: {\n    color: \"#fff\",\n    marginBottom: 8\n  },\n  subtitle: {\n    color: \"#fff\",\n    marginBottom: 24\n  }\n});","map":{"version":3,"sources":["/Users/nuevousuario/Desktop/app mobile/react-native-Uniquiz/screens/Home.tsx"],"names":["StatusBar","React","useCallback","useEffect","Category","human","useDispatch","LinearGradient","Home","navigation","dispatch","settings","playMusic","onCategoryPress","categoryId","category","questions","loadQuestions","navigate","s","container","scrollViewContainer","title1","subtitle","categoryRow","StyleSheet","create","flex","backgroundColor","paddingTop","flexDirection","justifyContent","marginTop","paddingHorizontal","title","color","marginBottom"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { StyleSheet, Text, View, ScrollView } from \"react-native\";\nimport { HomeProps } from \"../types/navigation\";\nimport Category from \"../components/Category\";\nimport { human } from \"react-native-typography\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"../store\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst Home: React.FunctionComponent<HomeProps> = ({\n  navigation,\n}: HomeProps) => {\n  const dispatch = useDispatch<Dispatch>();\n  useEffect(() => {\n    dispatch.settings.playMusic();\n  }, []);\n  const onCategoryPress = useCallback(\n    async (categoryId: string, category: extendedCategoryName) => {\n      // load category questions (10)\n      await dispatch.questions.loadQuestions({ categoryId });\n      // navigate to the quizz screen\n      navigation.navigate(\"Quizz\", { category });\n    },\n    [dispatch]\n  );\n\n  return (\n    <LinearGradient colors={[\"#4b6cb7\", \"#182848\"]} style={s.container}>\n      <ScrollView contentContainerStyle={s.scrollViewContainer}>\n        <StatusBar style=\"light\" />\n        <Text style={[human.title1, s.subtitle]}>Select a Category</Text>\n        <Category name=\"animals\" onPress={onCategoryPress} />\n        <View style={s.categoryRow}>\n          <Category name=\"games\" onPress={onCategoryPress} />\n          <Category name=\"music\" onPress={onCategoryPress} />\n        </View>\n        <View style={s.categoryRow}>\n          <Category name=\"vehicles\" onPress={onCategoryPress} />\n          <Category name=\"random\" onPress={onCategoryPress} />\n        </View>\n      </ScrollView>\n    </LinearGradient>\n  );\n};\n\nexport default Home;\n\nconst s = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: 8,\n  },\n  categoryRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 18,\n  },\n  scrollViewContainer: {\n    paddingHorizontal: 8,\n    justifyContent: \"space-around\",\n  },\n  title: { color: \"#fff\", marginBottom: 8 },\n  subtitle: { color: \"#fff\", marginBottom: 24 },\n});\n"]},"metadata":{},"sourceType":"module"}